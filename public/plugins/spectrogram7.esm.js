function t(t,n,h,l){return new(h=h||Promise)(function(s,e){function i(t){try{r(l.next(t))}catch(t){e(t)}}function a(t){try{r(l.throw(t))}catch(t){e(t)}}function r(t){var e;t.done?s(t.value):((e=t.value)instanceof h?e:new h(function(t){t(e)})).then(i,a)}r((l=l.apply(t,n||[])).next())})}class e{constructor(){this.listeners={}}on(t,e,s){if(this.listeners[t]||(this.listeners[t]=new Set),this.listeners[t].add(e),null!=s&&s.once){const s=()=>{this.un(t,s),this.un(t,e)};return this.on(t,s),s}return()=>this.un(t,e)}un(t,e){null!=(t=this.listeners[t])&&t.delete(e)}once(t,e){return this.on(t,e,{once:!0})}unAll(){this.listeners={}}emit(t,...e){this.listeners[t]&&this.listeners[t].forEach(t=>t(...e))}}class s extends e{constructor(t){super(),this.subscriptions=[],this.options=t}onInit(){}_init(t){this.wavesurfer=t,this.onInit()}destroy(){this.emit("destroy"),this.subscriptions.forEach(t=>t())}}function i(t,e){const s=e.xmlns?document.createElementNS(e.xmlns,t):document.createElement(t);for(const[t,a]of Object.entries(e))if("children"===t)for(const[t,r]of Object.entries(e))"string"==typeof r?s.appendChild(document.createTextNode(r)):s.appendChild(i(t,r));else"style"===t?Object.assign(s.style,a):"textContent"===t?s.textContent=a:s.setAttribute(t,a.toString());return s}function a(t,e,s){t=i(t,e||{});return null!=s&&s.appendChild(t),t}function r(t,e,s,i){switch(this.bufferSize=t,this.sampleRate=e,this.bandwidth=2/t*(e/2),this.sinTable=new Float32Array(t),this.cosTable=new Float32Array(t),this.windowValues=new Float32Array(t),this.reverseTable=new Uint32Array(t),this.peakBand=0,this.peak=0,s){case"bartlett":for(a=0;a<t;a++)this.windowValues[a]=2/(t-1)*((t-1)/2-Math.abs(a-(t-1)/2));break;case"bartlettHann":for(a=0;a<t;a++)this.windowValues[a]=.62-.48*Math.abs(a/(t-1)-.5)-.38*Math.cos(2*Math.PI*a/(t-1));break;case"blackman":for(i=i||.16,a=0;a<t;a++)this.windowValues[a]=(1-i)/2-.5*Math.cos(2*Math.PI*a/(t-1))+i/2*Math.cos(4*Math.PI*a/(t-1));break;case"cosine":for(a=0;a<t;a++)this.windowValues[a]=Math.cos(Math.PI*a/(t-1)-Math.PI/2);break;case"gauss":for(i=i||.25,a=0;a<t;a++)this.windowValues[a]=Math.pow(Math.E,-.5*Math.pow((a-(t-1)/2)/(i*(t-1)/2),2));break;case"hamming":for(a=0;a<t;a++)this.windowValues[a]=.54-.46*Math.cos(2*Math.PI*a/(t-1));break;case"hann":case void 0:for(a=0;a<t;a++)this.windowValues[a]=.5*(1-Math.cos(2*Math.PI*a/(t-1)));break;case"lanczoz":for(a=0;a<t;a++)this.windowValues[a]=Math.sin(Math.PI*(2*a/(t-1)-1))/(Math.PI*(2*a/(t-1)-1));break;case"rectangular":for(a=0;a<t;a++)this.windowValues[a]=1;break;case"triangular":for(a=0;a<t;a++)this.windowValues[a]=2/t*(t/2-Math.abs(a-(t-1)/2));break;default:throw Error("No such window function '"+s+"'")}for(var a,r=1,n=t>>1;r<t;){for(a=0;a<r;a++)this.reverseTable[a+r]=this.reverseTable[a]+n;r<<=1,n>>=1}for(a=0;a<t;a++)this.sinTable[a]=Math.sin(-Math.PI/a),this.cosTable[a]=Math.cos(-Math.PI/a);this.calculateSpectrum=function(t){var e,s=this.bufferSize,i=this.cosTable,a=this.sinTable,r=this.reverseTable,n=new Float32Array(s),h=new Float32Array(s),l=2/this.bufferSize,o=Math.sqrt,c=new Float32Array(s/2),f=Math.floor(Math.log(s)/Math.LN2);if(Math.pow(2,f)!==s)throw"Invalid buffer size, must be a power of 2.";if(s!==t.length)throw"Supplied buffer is not the same size as defined FFT. FFT Size: "+s+" Buffer Size: "+t.length;for(var u,p,d,w,M=1,g=0;g<s;g++)n[g]=t[r[g]]*this.windowValues[r[g]],h[g]=0;for(;M<s;){for(var m=i[M],b=a[M],y=1,v=0,x=0;x<M;x++){for(g=x;g<s;)p=y*n[u=g+M]-v*h[u],d=y*h[u]+v*n[u],n[u]=n[g]-p,h[u]=h[g]-d,n[g]+=p,h[g]+=d,g+=M<<1;y=(w=y)*m-v*b,v=w*b+v*m}M<<=1}for(var g=0,k=s/2;g<k;g++)(e=l*o((e=n[g])*e+(e=h[g])*e))>this.peak&&(this.peakBand=g,this.peak=e),c[g]=e;return c}}class n extends s{static create(t){return new n(t||{})}constructor(e){if(super(e),this.frequenciesDataUrl=e.frequenciesDataUrl,this.container="string"==typeof e.container?document.querySelector(e.container):e.container,e.colorMap&&"string"!=typeof e.colorMap){if(e.colorMap.length<256)throw new Error("Colormap must contain 256 elements");for(let t=0;t<e.colorMap.length;t++)if(4!==e.colorMap[t].length)throw new Error("ColorMap entries must contain 4 values");this.colorMap=e.colorMap}else switch(this.colorMap=e.colorMap||"roseus",this.colorMap){case"gray":this.colorMap=[];for(let t=0;t<256;t++){var s=(255-t)/256;this.colorMap.push([s,s,s,1])}break;case"igray":this.colorMap=[];for(let t=0;t<256;t++){var i=t/256;this.colorMap.push([i,i,i,1])}break;case"roseus":this.colorMap=[[.004528,.004341,.004307,1],[.005625,.006156,.00601,1],[.006628,.008293,.008161,1],[.007551,.010738,.01079,1],[.008382,.013482,.013941,1],[.009111,.01652,.017662,1],[.009727,.019846,.022009,1],[.010223,.023452,.027035,1],[.010593,.027331,.032799,1],[.010833,.031475,.039361,1],[.010941,.035875,.046415,1],[.010918,.04052,.053597,1],[.010768,.045158,.060914,1],[.010492,.049708,.068367,1],[.010098,.054171,.075954,1],[.009594,.058549,.083672,1],[.008989,.06284,.091521,1],[.008297,.067046,.099499,1],[.00753,.071165,.107603,1],[.006704,.075196,.11583,1],[.005838,.07914,.124178,1],[.004949,.082994,.132643,1],[.004062,.086758,.141223,1],[.003198,.09043,.149913,1],[.002382,.09401,.158711,1],[.001643,.097494,.167612,1],[.001009,.100883,.176612,1],[514e-6,.104174,.185704,1],[187e-6,.107366,.194886,1],[66e-6,.110457,.204151,1],[186e-6,.113445,.213496,1],[587e-6,.116329,.222914,1],[.001309,.119106,.232397,1],[.002394,.121776,.241942,1],[.003886,.124336,.251542,1],[.005831,.126784,.261189,1],[.008276,.12912,.270876,1],[.011268,.131342,.280598,1],[.014859,.133447,.290345,1],[.0191,.135435,.300111,1],[.024043,.137305,.309888,1],[.029742,.139054,.319669,1],[.036252,.140683,.329441,1],[.043507,.142189,.339203,1],[.050922,.143571,.348942,1],[.058432,.144831,.358649,1],[.066041,.145965,.368319,1],[.073744,.146974,.377938,1],[.081541,.147858,.387501,1],[.089431,.148616,.396998,1],[.097411,.149248,.406419,1],[.105479,.149754,.415755,1],[.113634,.150134,.424998,1],[.121873,.150389,.434139,1],[.130192,.150521,.443167,1],[.138591,.150528,.452075,1],[.147065,.150413,.460852,1],[.155614,.150175,.469493,1],[.164232,.149818,.477985,1],[.172917,.149343,.486322,1],[.181666,.148751,.494494,1],[.190476,.148046,.502493,1],[.199344,.147229,.510313,1],[.208267,.146302,.517944,1],[.217242,.145267,.52538,1],[.226264,.144131,.532613,1],[.235331,.142894,.539635,1],[.24444,.141559,.546442,1],[.253587,.140131,.553026,1],[.262769,.138615,.559381,1],[.271981,.137016,.5655,1],[.281222,.135335,.571381,1],[.290487,.133581,.577017,1],[.299774,.131757,.582404,1],[.30908,.129867,.587538,1],[.318399,.12792,.592415,1],[.32773,.125921,.597032,1],[.337069,.123877,.601385,1],[.346413,.121793,.605474,1],[.355758,.119678,.609295,1],[.365102,.11754,.612846,1],[.374443,.115386,.616127,1],[.383774,.113226,.619138,1],[.393096,.111066,.621876,1],[.402404,.108918,.624343,1],[.411694,.106794,.62654,1],[.420967,.104698,.628466,1],[.430217,.102645,.630123,1],[.439442,.100647,.631513,1],[.448637,.098717,.632638,1],[.457805,.096861,.633499,1],[.46694,.095095,.6341,1],[.47604,.093433,.634443,1],[.485102,.091885,.634532,1],[.494125,.090466,.63437,1],[.503104,.08919,.633962,1],[.512041,.088067,.633311,1],[.520931,.087108,.63242,1],[.529773,.086329,.631297,1],[.538564,.085738,.629944,1],[.547302,.085346,.628367,1],[.555986,.085162,.626572,1],[.564615,.08519,.624563,1],[.573187,.085439,.622345,1],[.581698,.085913,.619926,1],[.590149,.086615,.617311,1],[.598538,.087543,.614503,1],[.606862,.0887,.611511,1],[.61512,.090084,.608343,1],[.623312,.09169,.605001,1],[.631438,.093511,.601489,1],[.639492,.095546,.597821,1],[.647476,.097787,.593999,1],[.655389,.100226,.590028,1],[.66323,.102856,.585914,1],[.670995,.105669,.581667,1],[.678686,.108658,.577291,1],[.686302,.111813,.57279,1],[.69384,.115129,.568175,1],[.7013,.118597,.563449,1],[.708682,.122209,.558616,1],[.715984,.125959,.553687,1],[.723206,.12984,.548666,1],[.730346,.133846,.543558,1],[.737406,.13797,.538366,1],[.744382,.142209,.533101,1],[.751274,.146556,.527767,1],[.758082,.151008,.522369,1],[.764805,.155559,.516912,1],[.771443,.160206,.511402,1],[.777995,.164946,.505845,1],[.784459,.169774,.500246,1],[.790836,.174689,.494607,1],[.797125,.179688,.488935,1],[.803325,.184767,.483238,1],[.809435,.189925,.477518,1],[.815455,.19516,.471781,1],[.821384,.200471,.466028,1],[.827222,.205854,.460267,1],[.832968,.211308,.454505,1],[.838621,.216834,.448738,1],[.844181,.222428,.442979,1],[.849647,.22809,.43723,1],[.855019,.233819,.431491,1],[.860295,.239613,.425771,1],[.865475,.245471,.420074,1],[.870558,.251393,.414403,1],[.875545,.25738,.408759,1],[.880433,.263427,.403152,1],[.885223,.269535,.397585,1],[.889913,.275705,.392058,1],[.894503,.281934,.386578,1],[.898993,.288222,.381152,1],[.903381,.294569,.375781,1],[.907667,.300974,.370469,1],[.911849,.307435,.365223,1],[.915928,.313953,.360048,1],[.919902,.320527,.354948,1],[.923771,.327155,.349928,1],[.927533,.333838,.344994,1],[.931188,.340576,.340149,1],[.934736,.347366,.335403,1],[.938175,.354207,.330762,1],[.941504,.361101,.326229,1],[.944723,.368045,.321814,1],[.947831,.375039,.317523,1],[.950826,.382083,.313364,1],[.953709,.389175,.309345,1],[.956478,.396314,.305477,1],[.959133,.403499,.301766,1],[.961671,.410731,.298221,1],[.964093,.418008,.294853,1],[.966399,.425327,.291676,1],[.968586,.43269,.288696,1],[.970654,.440095,.285926,1],[.972603,.44754,.28338,1],[.974431,.455025,.281067,1],[.976139,.462547,.279003,1],[.977725,.470107,.277198,1],[.979188,.477703,.275666,1],[.980529,.485332,.274422,1],[.981747,.492995,.273476,1],[.98284,.50069,.272842,1],[.983808,.508415,.272532,1],[.984653,.516168,.27256,1],[.985373,.523948,.272937,1],[.985966,.531754,.273673,1],[.986436,.539582,.274779,1],[.98678,.547434,.276264,1],[.986998,.555305,.278135,1],[.987091,.563195,.280401,1],[.987061,.5711,.283066,1],[.986907,.579019,.286137,1],[.986629,.58695,.289615,1],[.986229,.594891,.293503,1],[.985709,.602839,.297802,1],[.985069,.610792,.302512,1],[.98431,.618748,.307632,1],[.983435,.626704,.313159,1],[.982445,.634657,.319089,1],[.981341,.642606,.32542,1],[.98013,.650546,.332144,1],[.978812,.658475,.339257,1],[.977392,.666391,.346753,1],[.97587,.67429,.354625,1],[.974252,.68217,.362865,1],[.972545,.690026,.371466,1],[.97075,.697856,.380419,1],[.968873,.705658,.389718,1],[.966921,.713426,.399353,1],[.964901,.721157,.409313,1],[.962815,.728851,.419594,1],[.960677,.7365,.430181,1],[.95849,.744103,.44107,1],[.956263,.751656,.452248,1],[.954009,.759153,.463702,1],[.951732,.766595,.475429,1],[.949445,.773974,.487414,1],[.947158,.781289,.499647,1],[.944885,.788535,.512116,1],[.942634,.795709,.524811,1],[.940423,.802807,.537717,1],[.938261,.809825,.550825,1],[.936163,.81676,.564121,1],[.934146,.823608,.577591,1],[.932224,.830366,.59122,1],[.930412,.837031,.604997,1],[.928727,.843599,.618904,1],[.927187,.850066,.632926,1],[.925809,.856432,.647047,1],[.92461,.862691,.661249,1],[.923607,.868843,.675517,1],[.92282,.874884,.689832,1],[.922265,.880812,.704174,1],[.921962,.886626,.718523,1],[.92193,.892323,.732859,1],[.922183,.897903,.747163,1],[.922741,.903364,.76141,1],[.92362,.908706,.77558,1],[.924837,.913928,.789648,1],[.926405,.919031,.80359,1],[.92834,.924015,.817381,1],[.930655,.928881,.830995,1],[.93336,.933631,.844405,1],[.936466,.938267,.857583,1],[.939982,.942791,.870499,1],[.943914,.947207,.883122,1],[.948267,.951519,.895421,1],[.953044,.955732,.907359,1],[.958246,.959852,.918901,1],[.963869,.963887,.930004,1],[.969909,.967845,.940623,1],[.976355,.971737,.950704,1],[.983195,.97558,.960181,1],[.990402,.979395,.968966,1],[.99793,.983217,.97692,1]];break;default:throw Error("No such colormap '"+this.colorMap+"'")}this.fftSamples=e.fftSamples||512,this.noverlap=e.noverlap||.75*this.fftSamples,this.windowFunc=e.windowFunc||"hann",this.alpha=e.alpha,this.frequencyMin=e.frequencyMin||0,this.frequencyMax=e.frequencyMax||0,this.gainDB=e.gainDB||20,this.rangeDB=e.rangeDB||80,this.scale=e.scale||"mel",this.numMelFilters=e.numMelFilters||this.fftSamples/8,"mel"==this.scale?(this.height=e.height||this.numMelFilters,this.height=Math.min(this.height,this.numMelFilters)):(this.height=e.height||this.fftSamples/2,this.height=Math.min(this.height,this.fftSamples/2)),this.createWrapper(),this.createCanvas()}onInit(){this.container=this.container||this.wavesurfer.getWrapper(),this.container.appendChild(this.wrapper),this.wavesurfer.options.fillParent&&Object.assign(this.wrapper.style,{width:"100%",overflowX:"hidden",overflowY:"hidden"}),this.subscriptions.push(this.wavesurfer.on("redraw",()=>this.render()))}destroy(){this.unAll(),this.wavesurfer.un("ready",this._onReady),this.wavesurfer.un("redraw",this._onRender),this.wavesurfer=null,this.util=null,this.options=null,this.wrapper&&(this.wrapper.remove(),this.wrapper=null),super.destroy()}loadFrequenciesData(s){return t(this,void 0,void 0,function*(){const t=yield fetch(s);if(!t.ok)throw new Error("Unable to fetch frequencies data");var e=yield t.json();this.drawSpectrogram(e)})}createWrapper(){this.wrapper=a("div",{style:{display:"block",position:"relative",userSelect:"none"}}),this.options.labels&&(this.labelsEl=a("canvas",{part:"spec-labels",style:{position:"absolute",zIndex:9,width:"55px",height:"100%"}},this.wrapper)),this.wrapper.addEventListener("click",this._onWrapperClick)}createCanvas(){this.canvas=a("canvas",{style:{position:"absolute",left:0,top:0,width:"100%",height:"100%",zIndex:4}},this.wrapper),this.spectrCc=this.canvas.getContext("2d")}render(){var t;this.frequenciesDataUrl?this.loadFrequenciesData(this.frequenciesDataUrl):(t=null==(t=this.wavesurfer)?void 0:t.getDecodedData())&&this.drawSpectrogram(this.getFrequencies(t))}drawSpectrogram(t){isNaN(t[0][0])||(t=[t]),this.wrapper.style.height=this.height*t.length+"px",this.width=this.wavesurfer.getWrapper().offsetWidth,this.canvas.width=this.width,this.canvas.height=this.height*t.length;const s=this.spectrCc,i=this.height,a=this.width,r=this.buffer.sampleRate/2,n=this.frequencyMin,h=this.frequencyMax;if(s){for(let e=0;e<t.length;e++){const l=this.resample(t[e]),o=new ImageData(a,i);for(let e=0;e<l.length;e++)for(let t=0;t<l[e].length;t++){const r=this.colorMap[l[e][t]],n=4*((i-t)*a+e);o.data[n]=255*r[0],o.data[1+n]=255*r[1],o.data[2+n]=255*r[2],o.data[3+n]=255*r[3]}createImageBitmap(o).then(t=>{s.drawImage(t,0,i*(1-h/r),a,i*(h-n)/r,0,i*e,a,i)})}this.options.labels&&this.loadLabels(this.options.labelsBackground,"12px","12px","",this.options.labelsColor,this.options.labelsHzColor||this.options.labelsColor,"center","#specLabels",t.length),this.emit("ready")}}hzToMel(t){return 2595*Math.log10(1+t/700)}melToHz(t){return 700*(Math.pow(10,t/2595)-1)}createMelFilterBank(e,t){const s=this.hzToMel(0),i=this.hzToMel(t/2),a=Array.from({length:e},()=>Array(this.fftSamples/2+1).fill(0)),r=t/this.fftSamples;for(let t=0;t<e;t++){var n=this.melToHz(s+t/e*(i-s)),h=Math.floor(n/r),l=h*r,n=(n-l)/((h+1)*r-l);a[t][h]=1-n,a[t][h+1]=n}return a}applyMelFilterBank(s,i){const t=i.length,a=Array(t).fill(0);for(let e=0;e<t;e++)for(let t=0;t<s.length;t++)a[e]+=s[t]*i[e][t];return a}getFrequencies(i){var a,n;const h=this.fftSamples,l=(null!=(a=this.options.splitChannels)?a:null!=(n=this.wavesurfer)&&n.options.splitChannels)?i.numberOfChannels:1;if(this.frequencyMax=this.frequencyMax||i.sampleRate/2,i){const t=(this.buffer=i).sampleRate,c=[];let s=this.noverlap;if(!s){const a=i.length/this.canvas.width;s=Math.max(0,Math.round(h-a))}const f=new r(h,t,this.windowFunc,this.alpha),u=this.createMelFilterBank(this.numMelFilters,t);for(let e=0;e<l;e++){const n=i.getChannelData(e),l=[];let t=0;for(;t+h<n.length;){const i=n.slice(t,t+h),a=new Uint8Array(h/2);let e=f.calculateSpectrum(i);"mel"==this.scale&&(e=this.applyMelFilterBank(e,u));for(let t=0;t<h/2;t++){var o=20*Math.log10(e[t]);o<-this.rangeDB?a[t]=0:o>-this.gainDB?a[t]=255:a[t]=(o+this.gainDB)/this.rangeDB*255+256}l.push(a),t+=h-s}c.push(l)}return c}}freqType(t){return 1e3<=t?(t/1e3).toFixed(1):Math.round(t)}unitType(t){return 1e3<=t?"KHz":"Hz"}loadLabels(i,a,r,n,h,l,o,t,e){i=i||"rgba(68,68,68,0)",a=a||"12px",r=r||"12px",n=n||"Helvetica",h=h||"#fff",l=l||"#fff",o=o||"center";const c=this.height||512,f=c/256*5,u=this.frequencyMin,p=(this.frequencyMax-u)/f,d=this.labelsEl.getContext("2d"),w=window.devicePixelRatio;if(this.labelsEl.height=this.height*e*w,this.labelsEl.width=55*w,d.scale(w,w),d)for(let s=0;s<e;s++){let e;for(d.fillStyle=i,d.fillRect(0,s*c,55,(1+s)*c),d.fill(),e=0;e<=f;e++){d.textAlign=o,d.textBaseline="middle";const i=u+p*e,f=this.freqType(i),w=this.unitType(i);let t;t=0==e?(1+s)*c+e-10:(1+s)*c-50*e+2,"mel"==this.scale&&0!=i&&(t=t*this.hzToMel(i)/i),d.fillStyle=l,d.font=r+" "+n,d.fillText(w,40,t),d.fillStyle=h,d.font=a+" "+n,d.fillText(f,16,t)}}}resample(s){const i=this.width,a=[],r=1/s.length,n=1/i;let h;for(h=0;h<i;h++){const i=new Array(s[0].length);let e;for(e=0;e<s.length;e++){const a=e*r,o=a+r,c=h*n,f=c+n,u=Math.max(0,Math.min(o,f)-Math.max(a,c));let t;if(0<u)for(t=0;t<s[0].length;t++)null==i[t]&&(i[t]=0),i[t]+=u/n*s[e][t]}const l=new Uint8Array(s[0].length);let t;for(t=0;t<s[0].length;t++)l[t]=i[t];a.push(l)}return a}}export{n as default};