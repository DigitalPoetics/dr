---
import BaseLayout from "../../layouts/BaseLayout.astro";
// import BlogPost from "../../components/ui/BlogPost.astro";
import SelectedPosts from "../../components/ui/SelectedPosts.astro";
export async function getStaticPaths() {
    const allPosts = Object.values(import.meta.glob('/**/*.mdx', { eager: true }));
    const uniqueTags = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())];
    
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post: any) => post.frontmatter.tags?.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    {[
        ...new Map(
            posts
            .filter((post: any) => post.frontmatter.tags?.includes(tag)) // ✅ only posts with selected tag
            .map((post: any) => [post.frontmatter.index, post])          // ✅ group by index
        ).values()
    ].map((post: any) => {
        const groupedPosts = posts.filter(
            (p: any) =>
            p.frontmatter.index === post.frontmatter.index &&
            p.frontmatter.tags?.includes(tag) // ✅ ensure tag matches
        );

        return (
            <SelectedPosts
            customPosts={groupedPosts.map((p: any) => ({
                url: p.url,
                frontmatter: {
                title: p.frontmatter.title,
                description: p.frontmatter.description,
                },
            }))}
            customTitle={`~ ${post.frontmatter.index}`}
            customHref={`/${post.frontmatter.index}/`}
            />
        );
    })}


</BaseLayout>
