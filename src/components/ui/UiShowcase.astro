---
// import BaseLayout from "../layouts/BaseLayout.astro";
// import type { ImageMetadata } from 'astro:assets';
export interface Props {
  pageTitle: string;
  description: string;
  imageUrl: string | ImageMetadata;
  imageAlt: string;
  srcPath: string;
}

const { pageTitle, description, imageUrl, imageAlt, srcPath } = Astro.props;
---
<figure class="figure-container">
  <div class="content-wrapper">
    <a href={srcPath} class="text-content" target="_blank">
      <div class="title-container">
        <h1 class="title">{pageTitle}</h1>
        <p class="description">{description}</p>
      </div>
    </a>
    <!-- <div class="text-content">

    </div> -->
    <div class="image-wrapper">
      <!-- <img src={Astro.props.imageUrl} alt={imageAlt} class="responsive-image" /> -->
    <img src={typeof imageUrl === 'string' ? imageUrl : imageUrl.src} alt={imageAlt} class="responsive-image"/>
    </div>
  </div>
</figure>

<style>
  .figure-container {
    margin: 1rem 0 3rem 0;
    /* padding: 0.5rem 0; */
    width: 100%;
    border-top: var(--image-border);
    border-top-width: 2px;
  }

  .content-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    max-width: 100%;
    padding-top: 0.5rem;
    position: relative;
  }

  .text-content {
    flex: 1;
    text-decoration: none;
    color: inherit;
    /* display: block; */
    min-height: 100%;
    transition: color 0.2s ease;
  }

  /* .title-container {
    display: block;
    height: 100%;
  } */

  .text-content:hover .title {
    color: var(--hover-color);
  }

  /* .text-content:hover .description {
    color: var(--hover-color);
  } */

  .title {
    margin: 0 0 0.5rem 0;
    font-size: 1.2rem;
    font-weight: normal;
    /* text-decoration: underline; */
    line-height: 1.2;
    transition: color 0.2s ease;
    color: var(--light-text);
  }

  .description {
    margin: 0;
    font-size: 1rem;
    font-weight: normal;
    line-height: 1.2;
    transition: color 0.2s ease;
    color: var(--light-text-opacity);
  }


  html.dark .title {
    color: var(--dark-text);
  }

  html.dark .description {
    color: var(--dark-text-opacity);
  }

  .image-wrapper {
    flex: 1;
  }

  .responsive-image {
    width: 100%;
    height: 15rem;
    object-fit: cover;
    aspect-ratio: 16 / 10;
    border-radius: 0;
  }

  /* Desktop layout - side by side */
  @media (min-width: 636px) {
    .content-wrapper {
      flex-direction: row;
      align-items: flex-start;
      gap: 2rem;
    }

    .text-content {
      flex: 0 0 40%;
      max-width: 30%;
    }

    .title {
      font-size: 1.5rem;
    }

    .description {
      font-size: 1rem;
    }

    .image-wrapper {
      flex: 1;
    }

    .responsive-image {
      width: 100%;
      height: 18rem;
      object-fit: cover;
      aspect-ratio: 16 / 10;
    }
  }

  /* Large desktop */
  /* @media (min-width: 1024px) {
    .content-wrapper {
      gap: 3rem;
    }

    .text-content {
      flex: 0 0 35%;
      max-width: 35%;
    }

    .image-wrapper {
      flex: 1;
      max-width: 65%;
    }

    .title {
      font-size: 2.25rem;
    }
  } */
</style>