---
// Props:
// columns: array of column header strings (excluding row header)
// rows: array of objects with { rowHeader: string, cells: array of strings }

const { title= "", columns = [], rows = [] } = Astro.props;
---
<div class="table-container">
  <table border="1">
    {title && <caption class="table-title">{title}</caption>}
    <thead>
      <tr>
        <th></th>
        {columns.map((col: any) => <th>{col}</th>)}
      </tr>
    </thead>
    <tbody>
      {rows.map((row: any) => (
        <tr>
          <th>{row.rowHeader}</th>
          {row.cells.map((cell: any) => <td>{cell}</td>)}
        </tr>
      ))}
    </tbody>
  </table>
</div>


<style>
  .table-container {
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  }

  table {
    /* border-collapse: collapse; */
    /* max-width: 90%; */
    margin: 0 auto 0 auto;
    border-collapse: separate; /* Important for border-radius to work */
    border-spacing: 0;
    border-radius: 0.5rem; /* Adjust the radius as needed */
    overflow: hidden;   /* Ensures corners are clipped */
  }

  caption.table-title {
    caption-side: top;
    font-weight: bold;
    font-size: 1rem;
    padding: 0.5rem;
    text-align: center;
  }

  th, td {
    padding: 0.35rem;
    text-align: left;
    font-size: 1rem;
  }

  @media screen and (min-width: 636px {
    table {
      margin: 0 auto 0 auto;
    }
  })



</style>
