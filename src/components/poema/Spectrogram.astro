---
export interface Props {
  audioUrl: string;
  waveColor?: string;
  progressColor?: string;
  cursorColor?: string;
  height?: number;
  barHeight?: number;
  minPxPerSec?: number;
  cursorWidth?: number;
  autoCenter?: boolean;
  normalize?: boolean;
  fillParent?: boolean;
  spectrogramHeight?: number;
  spectrogramLabels?: boolean;
  labelsColor?: string;
  labelsBackground?: string;
  spectrogramScale?: string;
  fftSamples?: number;
  colorMap?: string;
  useWebWorker?: boolean;
  windowFunc?: string;
}

const {
  audioUrl,
  waveColor = '#ccc',
  progressColor = '#333333',
  cursorColor = '#333333',
  height = 64,
  barHeight = 1,
  minPxPerSec = 100,
  cursorWidth = 1,
  autoCenter = true,
  normalize = true,
  fillParent = true,
  spectrogramHeight = 200,
  spectrogramLabels = true,
  labelsColor = '#333333',
  labelsBackground = 'rgba(0, 0, 0, 0.1)',
  spectrogramScale = 'mel',
  fftSamples = 1024,
  colorMap = 'gray',
  useWebWorker = true,
  windowFunc = 'hann'
} = Astro.props;
---

<div class="diagram-overflow">
  <div id="y-axis"></div>
  <div id="waveform"></div>
  <div id="praat-labels"></div>
</div>

<div class="button-container">
  <button class="btn" id="play-pause-btn" aria-label="Play or pause the audio">
    <span id="play-icon">></span>
    <span id="pause-icon" style="display: none;">| |</span>
  </button>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/wavesurfer.js/7.8.11/wavesurfer.min.js"></script>

<script type="module" define:vars={{ 
  audioUrl, 
  waveColor, 
  progressColor, 
  cursorColor,
  height, 
  barHeight, 
  minPxPerSec, 
  cursorWidth, 
  autoCenter, 
  normalize, 
  fillParent,
  spectrogramHeight,
  spectrogramLabels,
  labelsColor,
  labelsBackground,
  spectrogramScale,
  fftSamples,
  colorMap,
  useWebWorker,
  windowFunc
}}>
  import SpectrogramPlugin from '/plugins/spectrogram7.esm.js'

  let wavesurfer;
  
  document.addEventListener('DOMContentLoaded', () => {
    wavesurfer = WaveSurfer.create({
      container: '#waveform',
      waveColor,
      progressColor,
      cursorColor,
      url: audioUrl,
      barHeight,
      minPxPerSec,
      height,
      fillParent,
      cursorWidth,
      autoCenter,
      normalize,
      plugins: [
        SpectrogramPlugin.create({
          height: spectrogramHeight,
          labels: spectrogramLabels,
          labelsColor: labelsColor,
          labelsBackground: labelsBackground,
          scale: spectrogramScale,
          fftSamples: fftSamples,
          colorMap: colorMap,
          useWebWorker: useWebWorker,
          windowFunc: windowFunc,
        })
      ]
    });

    window.wavesurfer = wavesurfer;

    wavesurfer.on('timeupdate', (currentTime) => {
      if (window.highlightText) {
        window.highlightText(currentTime);
      }
    });

    wavesurfer.on('ready', () => {
      window.dispatchEvent(new CustomEvent('wavesurfer-ready', { 
        detail: { duration: wavesurfer.getDuration() }
      }));
    });

    document.getElementById('play-pause-btn').onclick = () => {
      const playIcon = document.getElementById('play-icon');
      const pauseIcon = document.getElementById('pause-icon');
      
      if (wavesurfer.isPlaying()) {
        playIcon.style.display = 'inline';
        pauseIcon.style.display = 'none';
      } else {
        playIcon.style.display = 'none';
        pauseIcon.style.display = 'inline';
      }

      wavesurfer.playPause();
    };
  });
</script>

<style>
  .diagram-overflow {
    position: relative;
    width: 100%;
    overflow-x: auto;
    overflow-y: visible;
    border: var(--image-border);
    background-color: var(--viz-background);
  }

  #y-axis {
    position: absolute;
    left: 0;
    /* top: 160px; */
    width: 60px;
    z-index: 2;
  }

  #waveform {
    margin-left: 60px;
    position: relative;
  }

  #praat-labels {
    position: absolute;
    left: 0;
    /* top: 410px; */
    width: 60px;
    z-index: 2;
  }

  
  .button-container {
    text-align: center;
    margin-top: 1rem;
  }

  .btn {
    padding: 0.5rem 1rem;
    font-size: 1.5rem;
    font-weight: bold;
    cursor: pointer;
    font-family: 'IM Fell English', serif;
    border: var(--image-border);
    transition: background-color 0.3s ease, color 0.3s ease;
    margin: 1rem 0;
    width: 5rem;
    height: 3rem;
    background-color: var(--button-background);
  }

  .btn:hover {
    background-color: var(--hover-color);
    color: white;
  }
</style>
